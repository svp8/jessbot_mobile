{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Dimensions = require(\"../utils/Dimensions\");\n\nvar _FormInput = _interopRequireDefault(require(\"../LoginScreenFolder/FormInput\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Vlad\\\\jessbot_mobile\\\\LoginScreenFolder\\\\LoginScreen.js\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)('Отправить пароль'),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      buttonText = _useState2[0],\n      setButtonText = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      pasState = _useState6[0],\n      setStatePass = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      password = _useState8[0],\n      setPasword = _useState8[1];\n\n  var checkPass = function checkPass() {\n    if (password == 1) {\n      alert('You tapped the button!');\n      navigation.dispatch(_native.CommonActions.reset({\n        index: 1,\n        routes: [{\n          name: 'Details'\n        }]\n      }));\n    }\n\n    if (phone.length > 2) {\n      setStatePass(true);\n      setButtonText('Войти');\n    }\n  };\n\n  return _react.default.createElement(_reactNative.ScrollView, {\n    contentContainerStyle: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    source: require('../logo.png'),\n    resizeMode: \"contain\",\n    style: {\n      width: 200,\n      height: 111\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_FormInput.default, {\n    labelValue: phone,\n    onChangeText: function onChangeText(userPhone) {\n      return setPhone(userPhone);\n    },\n    placeholderText: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n    iconType: \"phone\",\n    keyboardType: \"phone-pad\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), pasState ? _react.default.createElement(_FormInput.default, {\n    labelValue: password,\n    onChangeText: function onChangeText(userPass) {\n      return setPasword(userPass);\n    },\n    placeholderText: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    iconType: \"lock\",\n    keyboardType: \"default\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }) : null, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.buttonContainer,\n    onPress: checkPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, buttonText)), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: {\n      marginVertical: 35\n    },\n    onPress: function onPress() {\n      return _reactNative.Linking.openURL('https://app.jess-bot.ru/index.html#/signup');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\")));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: 120\n  },\n  text: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: '#2e64e5',\n    fontFamily: 'Lato-Regular'\n  },\n  buttonContainer: {\n    marginTop: 10,\n    width: '100%',\n    height: _Dimensions.windowHeight / 15,\n    backgroundColor: 'cyan',\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 3\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    fontFamily: 'Lato-Regular'\n  }\n});\n\nvar _default = LoginScreen;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Vlad/jessbot_mobile/LoginScreenFolder/LoginScreen.js"],"names":["LoginScreen","navigation","buttonText","setButtonText","phone","setPhone","pasState","setStatePass","password","setPasword","checkPass","alert","dispatch","CommonActions","reset","index","routes","name","length","styles","container","require","width","height","userPhone","userPass","buttonContainer","marginVertical","Linking","openURL","text","StyleSheet","create","justifyContent","alignItems","padding","paddingTop","fontSize","fontWeight","color","fontFamily","marginTop","windowHeight","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n  Text,\r\n  ScrollView,\r\n  Image,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Linking,\r\n} from 'react-native';\r\nimport {windowHeight, windowWidth} from '../utils/Dimensions';\r\nimport FormInput from '../LoginScreenFolder/FormInput';\r\nimport {CommonActions} from '@react-navigation/native';\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n  const [buttonText, setButtonText] = useState('Отправить пароль');\r\n  const [phone, setPhone] = useState('');\r\n  const [pasState, setStatePass] = useState(false);\r\n  const [password, setPasword] = useState();\r\n  // кнопка Войти\r\n  // const resetAction = StackActions.reset({\r\n  //   actions: [NavigationActions.navigate({routeName: 'Details'})],\r\n  // });\r\n  const checkPass = () => {\r\n    if (password == 1) {\r\n      alert('You tapped the button!');\r\n      // Переход в меню и очищение стэка окон (при нажатии кнопки назад из меню вы выходите из окна)\r\n      navigation.dispatch(\r\n        CommonActions.reset({\r\n          index: 1,\r\n          routes: [\r\n            {\r\n              name: 'Details',\r\n            },\r\n          ],\r\n        }),\r\n      );\r\n    }\r\n\r\n    if (phone.length > 2) {\r\n      setStatePass(true);\r\n      setButtonText('Войти');\r\n    }\r\n  };\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <Image\r\n        source={require('../logo.png')}\r\n        resizeMode=\"contain\"\r\n        style={{width: 200, height: 111}}\r\n      />\r\n      <FormInput\r\n        labelValue={phone}\r\n        onChangeText={userPhone => setPhone(userPhone)}\r\n        placeholderText=\"Номер телефона\"\r\n        iconType=\"phone\"\r\n        keyboardType=\"phone-pad\"\r\n        autoCapitalize=\"none\"\r\n        autoCorrect={false}\r\n      />\r\n      {/* Форма для пароля (появляется когда введен номер телефона) */}\r\n      {pasState ? (\r\n        <FormInput\r\n          labelValue={password}\r\n          onChangeText={userPass => setPasword(userPass)}\r\n          placeholderText=\"Пароль\"\r\n          iconType=\"lock\"\r\n          keyboardType=\"default\"\r\n          secureTextEntry={true}\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n      ) : null}\r\n      {/* Кнопка \"войти\" */}\r\n      <TouchableOpacity style={styles.buttonContainer} onPress={checkPass}>\r\n        <Text style={styles.buttonText}>{buttonText}</Text>\r\n      </TouchableOpacity>\r\n      {/* Кнопка \"Создать аккаунт\" */}\r\n      <TouchableOpacity\r\n        style={{marginVertical: 35}}\r\n        onPress={() =>\r\n          Linking.openURL('https://app.jess-bot.ru/index.html#/signup')\r\n        }>\r\n        <Text style={styles.text}>Создать аккаунт</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    paddingTop: 120,\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    fontWeight: '500',\r\n    color: '#2e64e5',\r\n    fontFamily: 'Lato-Regular',\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 10,\r\n    width: '100%',\r\n    height: windowHeight / 15,\r\n    backgroundColor: 'cyan',\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 3,\r\n  },\r\n  buttonText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    fontFamily: 'Lato-Regular',\r\n  },\r\n});\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"script"}